/*
 * Generated by OpenRouter Code Generator
 * MAIN COMPONENT - Entry point for the application
 * HTML Compatibility Score: 0.40
 */

import React, { useState, useEffect } from 'react';
import ReactDOM from 'react-dom/client';
import axios from 'axios';
import './App.css';

const App = () => {
  const [currentView, setCurrentView] = useState('login');
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    // Check for an active session on initial load
    const checkSession = async () => {
      try {
        const response = await axios.get('/api/dashboard');
        setUser(response.data);
      } catch (err) {
        setUser(null);
      }
      setLoading(false);
    };
    checkSession();
  }, []);

  const handleLogin = async (e) => {
    e.preventDefault();
    const { email, password } = e.target.elements;
    try {
      const response = await axios.post('/api/login', { email: email.value, password: password.value });
      setUser(response.data);
      setCurrentView('dashboard');
    } catch (err) {
      setError('Invalid email or password');
    }
  };

  const handleRegister = async (e) => {
    e.preventDefault();
    const { username, email, password } = e.target.elements;
    try {
      await axios.post('/api/register', { username: username.value, email: email.value, password: password.value });
      setCurrentView('login');
    } catch (err) {
      setError('Registration failed. Please try again.');
    }
  };

  const handleLogout = async () => {
    try {
      await axios.post('/api/logout');
      setUser(null);
      setCurrentView('login');
    } catch (err) {
      setError('Logout failed. Please try again.');
    }
  };

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div className="container">
      {error && <div className="error">{error}</div>}
      {currentView === 'login' && (
        <form onSubmit={handleLogin}>
          <h2>Login</h2>
          <input type="email" name="email" placeholder="Email" required />
          <input type="password" name="password" placeholder="Password" required />
          <button type="submit">Login</button>
          <button type="button" onClick={() => setCurrentView('register')}>
            Register
          </button>
        </form>
      )}
      {currentView === 'register' && (
        <form onSubmit={handleRegister}>
          <h2>Register</h2>
          <input type="text" name="username" placeholder="Username" required />
          <input type="email" name="email" placeholder="Email" required />
          <input type="password" name="password" placeholder="Password" required />
          <button type="submit">Register</button>
          <button type="button" onClick={() => setCurrentView('login')}>
            Back to Login
          </button>
        </form>
      )}
      {currentView === 'dashboard' && user && (
        <div>
          <h2>Welcome, {user.username}!</h2>
          <button onClick={handleLogout}>Logout</button>
        </div>
      )}
    </div>
  );
};

const container = document.getElementById('root');
if (container) {
  const root = ReactDOM.createRoot(container);
  root.render(<App />);
}

export default App;