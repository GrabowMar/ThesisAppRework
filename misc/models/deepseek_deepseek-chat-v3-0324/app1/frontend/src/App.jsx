/*
 * Generated by OpenRouter Code Generator
 * MAIN COMPONENT - Entry point for the application
 * HTML Compatibility Score: 0.62
 */

// src/components/LoginForm.jsx
import { useState } from 'react';
import { login } from '../api';

const LoginForm = () => {
  const [formData, setFormData] = useState({
    username_or_email: '',
    password: '',
  });
  const [errors, setErrors] = useState({});
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      const response = await login(formData);
      console.log('Login successful:', response.data);
      // Redirect or update state
    } catch (error) {
      if (error.response?.data?.errors) {
        setErrors(error.response.data.errors);
      } else {
        console.error('Login error:', error);
      }
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label>Username or Email</label>
        <input
          type="text"
          value={formData.username_or_email}
          onChange={(e) => setFormData({...formData, username_or_email: e.target.value})}
        />
        {errors.auth && <span className="error">{errors.auth}</span>}
      </div>
      <div>
        <label>Password</label>
        <input
          type="password"
          value={formData.password}
          onChange={(e) => setFormData({...formData, password: e.target.value})}
        />
        {errors.password && <span className="error">{errors.password}</span>}
      </div>
      <button type="submit" disabled={isLoading}>
        {isLoading ? 'Logging in...' : 'Login'}
      </button>
    </form>
  );
};

export default LoginForm;