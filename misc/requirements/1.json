{
  "id": 1,
  "name": "Simple Todo List",
  "description": "A basic todo list application to manage tasks",
  "backend_requirements": [
    "Implement SQLAlchemy model for Todo (id, title, description, completed, created_at)",
    "Create POST /api/todos endpoint to add new todos with title and optional description",
    "Create GET /api/todos endpoint to list all todos ordered by created_at descending",
    "Create GET /api/todos/filter endpoint with query param status (all/active/completed)",
    "Create PUT /api/todos/<id> endpoint to update todo title, description, or completed status",
    "Create DELETE /api/todos/<id> endpoint to delete a specific todo",
    "Use proper HTTP status codes (200, 201, 400, 404) and JSON error responses",
    "Initialize database with db.create_all() in setup_app() function",
    "Include proper validation for all input fields"
  ],
  "frontend_requirements": [
    "Display a list of all todos with title, description, and completion status",
    "Provide a form to add new todos with title and description fields",
    "Show filter buttons for All, Active, and Completed todos",
    "Allow marking todos as completed/uncompleted with checkbox toggle",
    "Provide inline edit functionality for todo title and description",
    "Show delete button with confirmation dialog for each todo",
    "Use axios to call backend API at http://backend:5000 for all endpoints",
    "Show loading states during all API operations with spinner or skeleton screens",
    "Display error messages when API calls fail with user-friendly text",
    "Use Bootstrap 5 for styling with cards for todos and proper form controls",
    "Make the UI responsive and accessible with proper semantic HTML"
  ],
  "api_endpoints": [
    {
      "method": "POST",
      "path": "/api/todos",
      "description": "Create a new todo",
      "request": {"title": "string (required)", "description": "string (optional)"},
      "response": {"id": "integer", "title": "string", "description": "string", "completed": false, "created_at": "string"}
    },
    {
      "method": "GET",
      "path": "/api/todos",
      "description": "Get all todos ordered by creation date",
      "response": [{"id": "integer", "title": "string", "description": "string", "completed": "boolean", "created_at": "string"}]
    },
    {
      "method": "GET",
      "path": "/api/todos/filter",
      "description": "Get filtered todos by status",
      "query_params": {"status": "all|active|completed"},
      "response": [{"id": "integer", "title": "string", "description": "string", "completed": "boolean", "created_at": "string"}]
    },
    {
      "method": "PUT",
      "path": "/api/todos/<id>",
      "description": "Update a todo",
      "request": {"title": "string (optional)", "description": "string (optional)", "completed": "boolean (optional)"},
      "response": {"id": "integer", "title": "string", "description": "string", "completed": "boolean", "created_at": "string"}
    },
    {
      "method": "DELETE",
      "path": "/api/todos/<id>",
      "description": "Delete a todo",
      "response": {"message": "Todo deleted successfully"}
    }
  ],
  "control_endpoints": [
    {
      "path": "/health",
      "method": "GET",
      "expected_status": 200,
      "description": "Health check endpoint"
    }
  ]
}
