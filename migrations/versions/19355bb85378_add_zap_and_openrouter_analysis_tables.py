"""Add ZAP and OpenRouter analysis tables

Revision ID: 19355bb85378
Revises: 
Create Date: 2025-08-01 17:09:58.411740

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '19355bb85378'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('openrouter_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='analysisstatus'), nullable=True),
    sa.Column('total_requirements', sa.Integer(), nullable=True),
    sa.Column('met_requirements', sa.Integer(), nullable=True),
    sa.Column('unmet_requirements', sa.Integer(), nullable=True),
    sa.Column('high_confidence_count', sa.Integer(), nullable=True),
    sa.Column('medium_confidence_count', sa.Integer(), nullable=True),
    sa.Column('low_confidence_count', sa.Integer(), nullable=True),
    sa.Column('analysis_duration', sa.Float(), nullable=True),
    sa.Column('results_json', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['generated_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('openrouter_analyses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_openrouter_analyses_application_id'), ['application_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_openrouter_analyses_status'), ['status'], unique=False)

    op.create_table('zap_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='analysisstatus'), nullable=True),
    sa.Column('total_alerts', sa.Integer(), nullable=True),
    sa.Column('high_risk_count', sa.Integer(), nullable=True),
    sa.Column('medium_risk_count', sa.Integer(), nullable=True),
    sa.Column('low_risk_count', sa.Integer(), nullable=True),
    sa.Column('informational_count', sa.Integer(), nullable=True),
    sa.Column('analysis_duration', sa.Float(), nullable=True),
    sa.Column('results_json', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['generated_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('zap_analyses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_zap_analyses_application_id'), ['application_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_zap_analyses_status'), ['status'], unique=False)

    with op.batch_alter_table('generated_applications', schema=None) as batch_op:
        batch_op.alter_column('app_type',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('generation_status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='analysisstatus'),
               existing_nullable=True)
        batch_op.alter_column('backend_framework',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('frontend_framework',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_generated_applications_app_number'))
        batch_op.drop_index(batch_op.f('ix_generated_applications_container_status'))
        batch_op.drop_index(batch_op.f('ix_generated_applications_generation_status'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('generated_applications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generated_applications_generation_status'), ['generation_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_generated_applications_container_status'), ['container_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_generated_applications_app_number'), ['app_number'], unique=False)
        batch_op.alter_column('frontend_framework',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('backend_framework',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('generation_status',
               existing_type=sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='analysisstatus'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('app_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)

    with op.batch_alter_table('zap_analyses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_zap_analyses_status'))
        batch_op.drop_index(batch_op.f('ix_zap_analyses_application_id'))

    op.drop_table('zap_analyses')
    with op.batch_alter_table('openrouter_analyses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_openrouter_analyses_status'))
        batch_op.drop_index(batch_op.f('ix_openrouter_analyses_application_id'))

    op.drop_table('openrouter_analyses')
    # ### end Alembic commands ###
